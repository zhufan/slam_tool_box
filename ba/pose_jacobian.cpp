/*
 * Academic License - for use in teaching, academic research, and meeting
 * course requirements at degree granting institutions only.  Not for
 * government, commercial, or other organizational use.
 *
 * pose_jacobian.cpp
 *
 * Code generation for function 'pose_jacobian'
 *
 */

/* Include files */
#include "rt_nonfinite.h"
#include "point_jacobian.h"
#include "pose_jacobian.h"

/* Function Definitions */
void pose_jacobian(const double in1[3], const double in2[3], const double in3[4],
                   const double in4[9], const double in5[3], const double in6[3],
                   double b_pose_jacobian[12])
{
  double t4;
  double t5;
  double t6;
  double t7;
  double t8;
  double t9;
  double t10;
  double t11;
  double t12;
  double t13;
  double t14;
  double t16;
  double t18;
  double t19;
  double b_in3[12];
  int i2;
  int i3;

  /* POSE_JACOBIAN */
  /*     POSE_JACOBIAN = POSE_JACOBIAN(IN1,IN2,IN3,IN4,IN5,IN6) */
  /*     This function was generated by the Symbolic Math Toolbox version 8.1. */
  /*     10-Jun-2018 12:33:22 */
  t4 = in4[0] * in6[0];
  t5 = in4[3] * in6[1];
  t6 = in4[6] * in6[2];
  t7 = in4[1] * in6[0];
  t8 = in4[4] * in6[1];
  t9 = in4[7] * in6[2];
  t10 = ((in5[1] + t7) + t8) + t9;
  t11 = in4[2] * in6[0];
  t12 = in4[5] * in6[1];
  t13 = in4[8] * in6[2];
  t14 = ((in5[0] + t4) + t5) + t6;
  t16 = (((((in2[2] + in5[2]) + t11) + t12) + t13) + in1[0] * t10) - in1[1] *
    t14;
  t18 = ((in5[2] + t11) + t12) + t13;
  t19 = 1.0 / t16;
  t12 = in3[2] * t16 + in3[0] * ((((((in2[0] + in5[0]) + t4) + t5) + t6) + in1[1]
    * t18) - in1[2] * t10);
  t13 = 1.0 / (t16 * t16);
  t11 = in3[3] * t16 + in3[1] * ((((((in2[1] + in5[1]) + t7) + t8) + t9) + in1[2]
    * t14) - in1[0] * t18);
  b_in3[0] = in3[2] * t10 * t19 - t10 * t12 * t13;
  b_in3[1] = t19 * (in3[3] * t10 - in3[1] * t18) - t10 * t13 * t11;
  b_in3[2] = -t19 * (in3[2] * t14 - in3[0] * t18) + t14 * t12 * t13;
  b_in3[3] = -in3[3] * t14 * t19 + t14 * t13 * t11;
  b_in3[4] = -in3[0] * t10 * t19;
  b_in3[5] = in3[1] * t14 * t19;
  b_in3[6] = in3[0] * t19;
  b_in3[7] = 0.0;
  b_in3[8] = 0.0;
  b_in3[9] = in3[1] * t19;
  b_in3[10] = in3[2] * t19 - t12 * t13;
  b_in3[11] = in3[3] * t19 - t13 * t11;
  for (i2 = 0; i2 < 6; i2++) {
    for (i3 = 0; i3 < 2; i3++) {
      b_pose_jacobian[i3 + (i2 << 1)] = b_in3[i3 + (i2 << 1)];
    }
  }
}

/* End of code generation (pose_jacobian.cpp) */
